@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav flex-row">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item ">
            <a id="manage" class="nav-link text-dark top-nav__title me-3" asp-area="Identity"
            asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User) <span
                class="fa-solid fa-user"></span></a>

        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
            asp-route-returnUrl="@Url.Action("Index", "Dashboard", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-licnk text-dark top-nav__title">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item me-2">
            <a class="@(TempData["Route"].ToString() == "Register" ? "active" : "" ) nav-link text-dark top-nav__title"
            id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="@(TempData["Route"].ToString() == "Login" ? "active" : "" ) nav-link text-dark top-nav__title"
            id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
